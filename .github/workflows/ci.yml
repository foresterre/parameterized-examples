# GitHub Actions workflow: CI for parameterized-examples
#
# based on: https://github.com/BurntSushi/bstr/blob/master/.github/workflows/ci.yml
# which is licensed under Apache License, Version 2.0 or MIT license

name: "GitHub Actions: CI"
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [pinned, stable, macos, win-gnu, win-msvc] # excluded: nightly
        include:
          # pinned rust version :: ubuntu
          - build: pinned
            os: ubuntu-18.04
            rust: 1.38.0

          # latest rust stable :: ubuntu
          - build: stable
            os: ubuntu-latest
            rust: stable

          # latest rust nightly :: ubuntu
          - build: nightly
            os: ubuntu-latest
            rust: nightly

          # latest rust stable :: mac_os
          - build: macos
            os: macOS-latest
            rust: stable

          # latest rust stable :: windows + gnu
          - build: win-gnu
            os: windows-latest
            rust: stable-x86_64-gnu

          # latest rust stable :: windows + msvc
          - build: win-msvc
            os: windows-latest
            rust: stable


    steps:
      # checkout
      - name: checkout repository
        uses: actions/checkout@v2

      # install: rust
      - name: install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      # install: clippy
      - name: install component(clippy)
        run: rustup component add clippy

      # check/clippy
      - name: build all workspace crates
        run: cargo clippy --verbose --all --profile test -- -D warnings

      # build
      - name: build all workspace crates
        run: cargo build --verbose --all

      # tests
      - name: run all test cases
        run: cargo test --all

  msrv:
    name: msrv
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
                  
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - name: Install cargo-msrv
        run: cargo install cargo-msrv

      - name: Check msrv
        run: |
          cargo msrv --min 1.38.0

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Check formatting
        run: |
          cargo fmt --all -- --check
